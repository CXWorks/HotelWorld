<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:jpa="http://www.springframework.org/schema/data/jpa"
             xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/data/jpa
    http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx.xsd
    http://www.springframework.org/schema/task
    http://www.springframework.org/schema/task/spring-task.xsd">


    <jpa:repositories base-package="model.dao"/>

    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <!-- 基本属性 url、user、password -->
        <property name="url" value="jdbc:mysql://localhost:3306/hotelworld?useUnicode=true&amp;characterEncoding=UTF-8"/>
        <property name="username" value="chicer"/>
        <property name="password" value="chicer2016"/>
        <property name="driverClassName" value="com.mysql.cj.jdbc.Driver"/>

        <!-- 配置初始化大小、最小、最大 -->
        <property name="initialSize" value="1" />
        <property name="minIdle" value="1" />
        <property name="maxActive" value="20" />

        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="60000" />

        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000" />

        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="300000" />

        <property name="validationQuery" value="SELECT 'x'" />
        <property name="testWhileIdle" value="true" />
        <property name="testOnBorrow" value="false" />
        <property name="testOnReturn" value="false" />

        <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
        <property name="poolPreparedStatements" value="true" />
        <property name="maxPoolPreparedStatementPerConnectionSize" value="20" />

        <!-- 配置监控统计拦截的filters -->
        <property name="filters" value="stat" />
    </bean>

    <!--
       Creates the transaction manager bean that integrates the used JPA provider with the
       Spring transaction mechanism.
   -->
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>

    <!-- Enables annotation-driven transaction management. -->
    <tx:annotation-driven/>
    <task:annotation-driven />
    <!--<task:scheduled-tasks>-->
        <!--<task:scheduled ref="VIPTask" method="daily"/>-->
    <!--</task:scheduled-tasks>-->
    <!--
        Specifies the default settings that are compatible with Hibernate.
    -->
    <bean id="hibernateJpaVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"/>

    <!-- Creates the bean that creates the JPA entity manager factory. -->
    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="jpaVendorAdapter" ref="hibernateJpaVendorAdapter"/>
        <property name="packagesToScan" value="model.entity"/>
        <!-- Set share cache mode -->
        <property name="sharedCacheMode" value="ENABLE_SELECTIVE"/>
        <!-- Set validation mode -->
        <property name="validationMode" value="NONE"/>
        <property name="jpaProperties">
            <props>
                <!--
                    Configures the used database dialect. This allows Hibernate to create SQL
                    that is optimized for the used database.
                -->
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQL57InnoDBDialect</prop>

                <!--
                    If the value of this property is true, Hibernate writes all SQL
                    statements to the console.
                -->
                <prop key="hibernate.show_sql">false</prop>

                <!--
                    If the value of this property is true, Hibernate will use prettyprint
                    when it writes SQL to the console.
                -->
                <prop key="hibernate.format_sql">true</prop>
            </props>
        </property>
    </bean>








</beans>

